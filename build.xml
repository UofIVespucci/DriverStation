<project name="DriverStation" default="default" basedir="."
        xmlns:ivy="antlib:org.apache.ivy.ant"
        xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <property file="build.properties" />

    <target name="init">
        <mkdir dir="${resourceDir}"/>
        <mkdir dir="${sourceDir}"/>
        <mkdir dir="${testDir}"/>
        <mkdir dir="${outputDir}"/>
        <mkdir dir="${libDir}"/>
        <mkdir dir="${reportsDir}"/>
        <mkdir dir="${testLibDir}"/>
        <mkdir dir="${scalaLibDir}"/>
        <mkdir dir="${codegenOutputDir}"/>
    </target>

    <target name="retrieve" depends="init">
        <ivy:retrieve conf="testing" pattern="${testLibDir}/[artifact].[ext]"/>
        <ivy:retrieve conf="application" pattern="${libDir}/[artifact].[ext]"/>
        <ivy:retrieve conf="scala" pattern="${scalaLibDir}/[artifact].[ext]"/>
        <ivy:retrieve conf="external" pattern="${externLibDir}/[artifact].[ext]"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${outputDir}"/>
        <delete dir="${libDir}"/>
        <delete dir="${reportsDir}"/>
        <delete dir="${codegenOutputDir}"/>
        <ivy:cleancache />
    </target>

    <target name="compile" depends="init,generateMessages">
        <javac srcdir="${sourceDir}" destdir="${outputDir}" extdirs="${libDir}"
                includeantruntime="false" >
            <classpath path="${classpath}">
                <file name="${java.home}\lib\ext\jfxrt.jar"/>
                <file name="${externLibDir}\humble-video-noarch.jar"/>
            </classpath>
            <compilerarg value="-XDignore.symbol.file"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${outputJar}" basedir="${outputDir}">
            <fileset dir="${resourceDir}" />
            <zipgroupfileset dir="${libDir}">
                <include name="*.jar" />
            </zipgroupfileset>
            <manifest>
                <attribute name="Main-Class" value="com.Main"/>
                <attribute name="Class-Path" value="/io/humble/video/"/>
            </manifest>
        </jar>
        <delete dir="${outputDir}" />
    </target>

    <target name="build" depends="jar">
        <java jar="${outputJar}" fork="true">
            <!--<classpath path="${classpath}"/>-->
            <arg value="-h"/>
            <classpath>
                <fileset dir="${externLibDir}">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </java>
    </target>

    <target name="test" depends="compile">
        <javac srcdir="${testDir}" destdir="${outputDir}" extdirs="${libDir}:${outputDir}"
                includeantruntime="false" >
            <classpath path="${classpath}">
                <fileset dir="${testLibDir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <compilerarg value="-XDignore.symbol.file"/>
        </javac>

        <junit>
            <classpath>
                <pathelement path="${classpath}"/>
                <fileset dir="${testLibDir}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${libDir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <formatter type="plain" usefile="false" />

            <batchtest fork="yes" todir="${reportsDir}">
                <fileset dir="${testDir}">
                    <include name="**/*_test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <uptodate property="codegen.messagesOutOfdate" targetfile="src/VespuChat/messages/spec.xml">
        <srcfiles dir= "src/VespuChat/messages" includes="*.java"/>
        <srcfiles dir= "RobotCode/messages" includes="*.h"/>
    </uptodate>

    <target name="generateMessages" if="codegen.messagesOutOfdate">
        <!-- Import scalac ant command -->
        <path id="scala.classpath">
            <fileset dir="${scalaLibDir}">
                <include name="*.jar"/>
            </fileset>
        </path>
        <taskdef resource="scala/tools/ant/antlib.xml" classpathref="scala.classpath"/>
        <!-- Compile the code generator -->
        <scalac srcdir="codegen" destdir="codegen" classpathref="scala.classpath">
            <include name="*.scala"/>
        </scalac>
        <!-- Run the code generaton -->
        <java dir="codegen" classname="MessageGen" fork="true" classpathref="scala.classpath">
            <classpath>
                <pathelement location="codegen"/>
            </classpath>
            <arg value="../src/VespuChat/messages/spec.xml"/>
        </java>
        <!-- Move the java message classes -->
        <move todir="src/VespuChat/messages/">
          <fileset dir="codegen/output">
            <include name="*.java"/>
          </fileset>
        </move>
        <!-- Move the cpp message classes -->
        <move todir="RobotCode/messages/">
          <fileset dir="codegen/output">
            <include name="*.h"/>
          </fileset>
        </move>
    </target>
</project>
